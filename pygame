pip install pygame
import pygame
import random

# Initialize pygame
pygame.init()

# Screen setup
WIDTH, HEIGHT = 400, 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Flappy Bird - Spacebar Version")
clock = pygame.time.Clock()
FONT = pygame.font.SysFont("Arial", 30)
BIG_FONT = pygame.font.SysFont("Arial", 40)

# Game variables
gravity = 0.5
bird_movement = 0
score = 0
high_score = 0
game_active = True

# Bird setup
bird = pygame.Rect(100, HEIGHT // 2, 30, 30)

# Pipe setup
pipe_width = 60
pipe_gap = 150
pipe_x = WIDTH
pipe_height = random.randint(100, 400)

def reset_game():
    global bird, pipe_x, pipe_height, bird_movement, score, game_active
    bird.y = HEIGHT // 2
    bird_movement = 0
    score = 0
    pipe_x = WIDTH
    pipe_height = random.randint(100, 400)
    game_active = True

# Game loop
running = True
while running:
    screen.fill((135, 206, 235))  # Sky blue background

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

        if game_active:
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_SPACE:
                    bird_movement = -10
        else:
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_r:
                    reset_game()

    if game_active:
        # Bird physics
        bird_movement += gravity
        bird.y += int(bird_movement)

        # Pipe movement
        pipe_x -= 5
        if pipe_x + pipe_width < 0:
            pipe_x = WIDTH
            pipe_height = random.randint(100, 400)
            score += 1

        # Bird and pipe drawing
        pygame.draw.rect(screen, (255, 255, 0), bird)
        top_pipe = pygame.Rect(pipe_x, 0, pipe_width, pipe_height)
        bottom_pipe = pygame.Rect(pipe_x, pipe_height + pipe_gap, pipe_width, HEIGHT)
        pygame.draw.rect(screen, (0, 200, 0), top_pipe)
        pygame.draw.rect(screen, (0, 200, 0), bottom_pipe)

        # Collision check
        if bird.colliderect(top_pipe) or bird.colliderect(bottom_pipe) or bird.top <= 0 or bird.bottom >= HEIGHT:
            game_active = False
            if score > high_score:
                high_score = score

        # Score display
        score_text = FONT.render(f"Score: {score}", True, (0, 0, 0))
        screen.blit(score_text, (10, 10))
    else:
        # Game Over display
        over_text = BIG_FONT.render("Game Over!", True, (255, 0, 0))
        restart_text = FONT.render("Press 'R' to Restart", True, (0, 0, 0))
        high_score_text = FONT.render(f"High Score: {high_score}", True, (0, 0, 0))
        screen.blit(over_text, (WIDTH // 2 - 100, HEIGHT // 2 - 60))
        screen.blit(restart_text, (WIDTH // 2 - 120, HEIGHT // 2))
        screen.blit(high_score_text, (WIDTH // 2 - 100, HEIGHT // 2 + 40))

    # Controls instructions
    controls_text = FONT.render("SPACE = Jump | R = Restart | ESC = Quit", True, (50, 50, 50))
    screen.blit(controls_text, (10, HEIGHT - 40))

    # Quit with ESC key
    keys = pygame.key.get_pressed()
    if keys[pygame.K_ESCAPE]:
        running = False

    pygame.display.update()
    clock.tick(60)

pygame.quit()
